name: release

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

  release:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install colloid specific dependencies
        run: sudo apt update && sudo apt install -y sassc inkscape optipng

      - name: Generate themes
        run: |
          set -eu pipefile

          python sources/patches/xfwm4/generate_assets.py

          python ./build.py mocha --all-accents --zip -d $PWD/releases > mocha.log 2>&1 &
          python ./build.py macchiato --all-accents --zip -d $PWD/releases > macchiato.log 2>&1 &
          python ./build.py frappe --all-accents --zip -d $PWD/releases > frappe.log 2>&1 &
          python ./build.py latte --all-accents --zip -d $PWD/releases > latte.log 2>&1 &
          declare -i err=0 werr=0
          while wait -fn || werr=$?; ((werr != 127)); do
            err=$werr
            if [[ $err -ne 0 ]]; then
              echo "Build failure, abort"
              cat *.log
              exit 1
            fi
          done

          cat *.log

      - name: Add zips to release
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} releases/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
